package isima.videoteca.modelo.dao.hibernate;

import java.util.List;

import isima.videoteca.modelo.dao.VideotecaDAO;
import isima.videoteca.modelo.negocio.Prestamo;
import isima.videoteca.modelo.negocio.ProgramaEducativo;
import isima.videoteca.modelo.negocio.Tema;
import isima.videoteca.modelo.negocio.Usuario;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

public class VideotecaDAOHibernate extends HibernateDaoSupport implements VideotecaDAO {

	@Override
	public void registrarTema(Tema tema) {
		this.getHibernateTemplate().save(tema);

	}

	@Override
	public void actualizarTema(Tema tema) {
		this.getHibernateTemplate().update(tema);

	}

	@Override
	public void eliminarTema(Tema tema) {
		this.getHibernateTemplate().delete(tema);

	}

	@Override
	public Tema obtenerTema(Integer clave) {
		return(Tema)this.getHibernateTemplate().get(Tema.class, clave);
	}

	@Override
	public List<Tema> obtenerTemas() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarPrestamo(Prestamo prestamo) {
		this.getHibernateTemplate().save(prestamo);

	}

	@Override
	public void actualizarPrestamo(Prestamo prestamo) {
		this.getHibernateTemplate().update(prestamo);

	}

	@Override
	public void eliminarPrestamo(Prestamo prestamo) {
		this.getHibernateTemplate().delete(prestamo);

	}

	@Override
	public Prestamo obtenerPrestamo(Integer clave) {
		return (Prestamo)this.getHibernateTemplate().get(Prestamo.class, clave);
	}

	@Override
	public List<Prestamo> obtenerPrestamos() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarProgramaEducativo(ProgramaEducativo programaEducativo) {
		this.getHibernateTemplate().save(programaEducativo);

	}

	@Override
	public void actualizarProgramaEducativo(ProgramaEducativo programaEducativo) {
		this.getHibernateTemplate().update(programaEducativo);

	}

	@Override
	public void eliminarProgramaEducativo(ProgramaEducativo programaEducativo) {
		this.getHibernateTemplate().delete(programaEducativo);

	}

	@Override
	public ProgramaEducativo obtenerProgramaEducativo(Integer clave) {
		return (ProgramaEducativo)this.getHibernateTemplate().get(ProgramaEducativo.class, clave);
	}

	@Override
	public List<ProgramaEducativo> obtenerProgramasEducativos() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarUsuario(Usuario usuario) {
		this.getHibernateTemplate().save(usuario);

	}

	@Override
	public void actualizarUsuario(Usuario usuario) {
		this.getHibernateTemplate().update(usuario);

	}

	@Override
	public void eliminarUsuario(Usuario usuario) {
		this.getHibernateTemplate().delete(usuario);

	}

	@Override
	public Usuario obtenerUsuario(Integer clave) {
		return (Usuario)this.getHibernateTemplate().get(Usuario.class, clave);
	}

	@Override
	public List<Usuario> obtenerUsuarios() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public List<ProgramaEducativo> obtenerProgramasEducativos(Tema tema) {
		return this.getHibernateTemplate().find("HQL");
	}

}
