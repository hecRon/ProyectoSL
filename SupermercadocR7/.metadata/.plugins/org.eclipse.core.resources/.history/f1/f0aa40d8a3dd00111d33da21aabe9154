package isima.videoteca.modelo.dao.hibernate;

import java.util.List;

import isima.videoteca.modelo.dao.VideotecaDAO;
import isima.videoteca.modelo.negocio.Venta;
import isima.videoteca.modelo.negocio.Articulo;
import isima.videoteca.modelo.negocio.Departamento;
import isima.videoteca.modelo.negocio.Usuario;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

public class VideotecaDAOHibernate extends HibernateDaoSupport implements VideotecaDAO {

	@Override
	public void registrarDepartamento(Departamento departamento) {
		this.getHibernateTemplate().save(departamento);

	}

	@Override
	public void actualizarDepartamento(Departamento departamento) {
		this.getHibernateTemplate().update(departamento);

	}

	@Override
	public void eliminarDepartamento(Departamento departamento) {
		this.getHibernateTemplate().delete(departamento);

	}

	@Override
	public Departamento obtenerDepartamento(Integer clave) {
		return(Departamento)this.getHibernateTemplate().get(Departamento.class, clave);
	}

	@Override
	public List<Departamento> obtenerDepartamentos() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarVenta(Venta venta) {
		this.getHibernateTemplate().save(venta);

	}

	@Override
	public void actualizarVenta(Venta venta) {
		this.getHibernateTemplate().update(venta);

	}

	@Override
	public void eliminarVenta(Venta venta) {
		this.getHibernateTemplate().delete(venta);

	}

	@Override
	public Venta obtenerVenta(Integer clave) {
		return (Venta)this.getHibernateTemplate().get(Venta.class, clave);
	}

	@Override
	public List<Venta> obtenerVentas() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarArticulo(Articulo articulo) {
		this.getHibernateTemplate().save(articulo);

	}

	@Override
	public void actualizarArticulo(Articulo articulo) {
		this.getHibernateTemplate().update(articulo);

	}

	@Override
	public void eliminarArticulo(Articulo articulo) {
		this.getHibernateTemplate().delete(articulo);

	}

	@Override
	public Articulo obtenerArticulo(Integer clave) {
		return (Articulo)this.getHibernateTemplate().get(Articulo.class, clave);
	}

	@Override
	public List<Articulo> obtenerProgramasEducativos() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public void registrarUsuario(Usuario usuario) {
		this.getHibernateTemplate().save(usuario);

	}

	@Override
	public void actualizarUsuario(Usuario usuario) {
		this.getHibernateTemplate().update(usuario);

	}

	@Override
	public void eliminarUsuario(Usuario usuario) {
		this.getHibernateTemplate().delete(usuario);

	}

	@Override
	public Usuario obtenerUsuario(Integer clave) {
		return (Usuario)this.getHibernateTemplate().get(Usuario.class, clave);
	}

	@Override
	public List<Usuario> obtenerUsuarios() {
		return this.getHibernateTemplate().find("HQL");
	}

	@Override
	public List<Articulo> obtenerArticulos(Departamento departamento) {
		return this.getHibernateTemplate().find("HQL");
	}

}
